P04

#include <stdio.h>
#include <stdlib.h>


int main()
{
	int n[10];
	int i;

	for (i = 0; i < 10; i++)
	{
		n[i] = 0;
	}

	printf("%s%13s\n", "Element", "Value");

	for (i = 0; i < 10; i++)
	{
		printf("%7d%13d\n", i, n[i]);
	}




	return 0;
}










P05

#include <stdio.h>
#include <stdlib.h>


int main()
{
	int n[10] = { 32,27,64,18,95,14,90,70,60,37 };
	int i;
	printf("%s%13s\n", "Element", "Value");
	for (i = 0; i < 10; i++)
	{
		printf("%7d%13d\n", i, n[i]);
	}




	return 0;
}










P06

#include <stdio.h>
#include <stdlib.h>
#define SIZE 10

int main()
{
	int s[SIZE];
	int j;
	for (j = 0; j < SIZE; j++)
	{
		s[j] = 2 + 2 * j;
	}
	printf("%s%13s\n", "Elemment", "Value");
	for (j = 0; j < SIZE; j++)
	{
		printf("%7d%13d\n", j, s[j]);
	}

	return 0;
}








P07

#include <stdio.h>
#include <stdlib.h>
#define SIZE 12

int main()
{
	int a[SIZE] = { 1,3,5,4,7,2,99,16,45,67,89,45 };
	int i;
	int total = 0;

	for (i = 0; i < SIZE; i++)
	{
		total += a[i];
	}
	printf("total of array element values is %d\n", total);
	return 0;
}








P08

#include <stdio.h>
#include <stdlib.h>
#define SIZE 12

int main()
{
	int n[SIZE] = { 19,3,15,7,11,9,13,5,17,1 };
	int i;
	int j;
	printf("%s%13s%17s\n", "element", "value", "histogram");
	for (i = 0; i < SIZE; i++)
	{
		printf("%7d%13d ", i, n[i]);
		for (j = 1; j <= n[i]; j++)
		{
			printf("%c", '*');
		}
		printf("\n");
	}
	return 0;
}









P13

#include <stdio.h>
#include <stdlib.h>

void printArray(const int a[][3]);

int main()
{
	int array1[2][3] = { {1,2,3},{4,5,6} };
	int array2[2][3] = { 1,2,3,4,5 };
	int array3[2][3] = { {1,2},{4} };

	printf("values in array1 by row are:\n");
	printArray(array1);

	printf("values in array2 by row are:\n");
	printArray(array2);

	printf("values in array3 by row are:\n");
	printArray(array3);
	return 0;
}
void printArray(const int a[][3])
{
	int i, j;
	for (i = 0; i <= 1; i++)
	{
		for (j = 0; j <= 2; j++)
		{
			printf("%d ", a[i][j]);
		}
		printf("\n");
	}
}








P14

#include <stdio.h>
#include <stdlib.h>
#define STUDENTS 3
#define EXAMS 4

int minimum(const int grades[][EXAMS], int pupils, int tests);
double average(const int setofgrades[], int tests);
int maximum(const int grades[][EXAMS], int pupils, int tests);
void printarray(const int grades[][EXAMS], int pupils, int tests);
int main()
{
	int student;
	const int studentgrades[STUDENTS][EXAMS] =
	{ {77,68,86,73},
		{96,87,89,78},
		{70,90,86,81} };

	printf("the array is:\n");
	printarray(studentgrades, STUDENTS, EXAMS);

	printf("\n\nlowest grade: %d\nhighest grade: %d\n",
		minimum(studentgrades, STUDENTS, EXAMS),
		maximum(studentgrades, STUDENTS, EXAMS));
	for (student = 0; student < STUDENTS; student++)
	{
		printf("the average grades for student %d is %.2f\n",
			student, average(studentgrades[student], EXAMS));
	}
	return 0;
}
void printarray(const int grades[][EXAMS], int pupils, int tests)
{
	int i, j;
	printf("		[0]	[1]	[2] [3]");
	for (i = 0; i < pupils; i++)
	{
		printf("\nstudentgrades[%d] ", i);
		for (j = 0; j < tests; j++)
			printf("%-5d", grades[i][j]);
	}
}
int minimum(const int grades[][EXAMS], int pupils, int tests)
{
	int i, j;
	int lowgrade = 100;
	for (i = 0; i < pupils; i++)
	{
		for (j = 0; j < tests; j++)
		{
			if (grades[i][j] < lowgrade)
			{
				lowgrade = grades[i][j];
			}
		}
	}
	return lowgrade;
}
int maximum(const int grades[][EXAMS], int pupils, int tests)
{
	int i, j;
	int highgrade = 0;
	for (i = 0; i < pupils; i++)
	{
		for (j = 0; j < tests; j++)
		{
			if (grades[i][j] > highgrade)
			{
				highgrade = grades[i][j];
			}
		}
	}
	return highgrade;
}
double average(const int setofgrades[], int tests)
{
	int i, total = 0;
	for (i = 0; i < tests; i++)
	{
		total += setofgrades[i];
	}
	return (double)total / tests;
}









P19

#include <stdio.h>
#include <stdlib.h>

int main()

{
	char s1[20];
	char s2[] = "string literal";
	int i;
	printf("enter a string: ");
	scanf_s("%s", s1);
	printf("string1 is: %s\nstring2 is: %s\n"
		"string1 with spaces between characters is: \n",
		s1, s2);
	for (i = 0; s1[i] != '\0'; i++)
		printf("%c ", s1[i]);
	printf("\n");

	return 0;
}









P21

#include <stdio.h>
#include <stdlib.h>
void s(void);
void a(void);
int main()

{
	printf("first call to each function:\n");
	s();
	a();

	printf("\n\nsecond call to each function:\n");
	s();
	a();
	printf("\n");
	return 0;
}
void s(void)
{
	static int array1[3];
	int i;
	printf("\nvalues on entering staticarrayinit:\n");

	for (i = 0; i <= 2; i++)
		printf("array1[%d] = %d	", i, array1[i]);

	printf("\nvalues on exiting staticarrayinit:\n");
	for (i = 0; i <= 2; i++)
		printf("array1[%d] = %d	", i, array1[i] += 5);
}
void a(void)
{
	int array2[3] = { 1,2,3 };
	int i;
	printf("\n\nvalues on entering automicarrayinit:\n");
	for (i = 0; i <= 2; i++)
		printf("array2[%d] = %d	", i, array2[i]);

	printf("\nvalues on exiting automicarrayinit:\n");
	for (i = 0; i <= 2; i++)
		printf("array2[%d] = %d ", i, array2[i] += 5);
}









P25

#include <stdio.h>
#include <stdlib.h>
int addbyone(int &xref)
{
	xref++;
	printf("xref=%d\n", xref);
	return xref;
}
int main()

{
	int x = 100;
	int y = addbyone(x);
	printf("x=%d\n", x);
	return 0;
}









P26

#include <stdio.h>
#include <stdlib.h>


int main()
{
	char array[5];
	printf("	array = %p\n&array[0] = %p\n   &array = %p\n",
		array, &array[0], &array);


	return 0;
}








P28

#include <stdio.h>
#include <stdlib.h>
#define SIZE 5 

void modifyarray(int b[], int size);
void modifyelement(int e);
int main()
{
	int a[SIZE] = { 0,1,2,3,4 };
	int i;
	printf("effects of passing entire array by reference:\n\nthe"
		"values of the original array are:\n");
	for (i = 0; i < SIZE; i++)
	{
		printf("%3d", a[i]);
	}
	printf("\n");
	modifyarray(a, SIZE);
	printf("the values of the modified array are:\n");
	for (i = 0; i < SIZE; i++)
	{
		printf("%3d", a[i]);
	}
	printf("\n\n\neffects of passing array element"
		"by value:\n\nthe value of a[3] is %d\n", a[3]);

	modifyelement(a[3]);
	printf("the value of a[3] is %d\n", a[3]);


	return 0;
}
void modifyarray(int b[], int size)
{
	int j;
	for (j = 0; j < size; j++)
	{
		b[j] *= 2;
	}
}
void modifyelement(int e)
{
	printf("value in modifyelement is %d\n", e *= 2);
}









P30

#include <stdio.h>
#include <stdlib.h>
void inverse(int *);

int main()
{
	int a[3] = { 3,5,7 }, i;
	for (i = 0; i < 3; i++)
		printf("%d	", a[i]);
	printf("\n");

	inverse(a);
	for (i = 0; i < 3; i++)
		printf("%d	", a[i]);
	printf("\n");

	return 0;
}
void inverse(int *b)
{
	int tmp[3], i;
	for (i = 0; i < 3; i++)
		tmp[2 - i] = b[i];
	for (i = 0; i < 3; i++)
		b[i] = tmp[i];
}









P37

#include <stdio.h>
#include <stdlib.h>
#define SIZE 100
int LS(const int array[], int key, int size);
int main()
{
	int a[SIZE], x, sk, e;
	for (x = 0; x < SIZE; x++)
	{
		a[x] = 2 * x;
	}
	printf("enter integer SK:\n");
	scanf_s("%d", &sk);
	e = LS(a, sk, SIZE);
	if (e != -1)
	{
		printf("found value in element %d\n", e);
	}
	else
	{
		printf("value not found\n");
	}
	return 0;
}
int LS(const int array[], int key, int size)
{
	int n;
	for (n = 0; n < size; ++n)
	{
		if (array[n] == key)
		{
			return n;
		}
	}
	return -1;
}








6.11

#include <stdio.h>
#include <stdlib.h>
int main()
{
	int temp,n[100],i,j,s,a,x=0;
	printf("(泡沫排序)請輸入幾個數字:\n");
	scanf("%d",&s);
	printf("請依序你要的數字大小進行輸入:\n");
	for(a=1;a<=s;a++)
	{
		scanf("%d",&n[a]);
	}
	for(i=1;i<=s;i++)
	{	
		
		for(j=1;j<s;j++)
		{
			
			if(n[j]>n[j+1])
			{	
				x++;
				temp=n[j];
				n[j]=n[j+1];
				n[j+1]=temp;
			}
			
		} 
	if(x!=0)
	{
	printf("LOOP %d : ",i);
	for(j=1;j<=s;j++)
	printf("%4d",n[j]);
	printf("\n");
	}
	else
	{
	break;
	}	
	
	x=0;
}
	return 0;
}



















